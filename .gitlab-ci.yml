image: maven:3.9.6-eclipse-temurin-21-alpine

stages:
  - build
  - test
  - package
  - deploy

variables:
  DOCKER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN"
  DOCKER_TLS_CERTDIR: "/certs"

cache:
  key: ${CI_JOB_NAME}
  paths:
    - .m2/repository
    - target/

build-app:
  stage: build
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week

run-tests:
  stage: test
  script:
    - mvn test
  needs: ["build-app"]

docker-build:
  stage: package
  image: docker:24.0.7
  services:
    - docker:24.0.7-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull
      --build-arg JAVA_VERSION=21
      -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "main"
  needs: ["run-tests"]

deploy-develop:
  stage: deploy
  image: alpine:3.18
  before_script:
    - apk add --no-cache openssh-client sshpass docker-cli
  script:
    - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
      docker pull $DOCKER_IMAGE &&
      docker stop vboost-back || true;
      docker rm vboost-back || true;
      docker run -d --name vboost-back \
      -p 6969:6969 \
      -e USERNAME_DB='$DEV_DB_USER' \
      -e PASSWORD_DB='$DEV_DB_PASSWORD' \
      -e JWT_SECRET_KEY='$JWT_SECRET' \
      -e URL_DB='jdbc:postgresql://prod-db:5432/booster_platform' \
      -e JAVA_OPTS='-Xmx512m -Dspring.profiles.active=dev' \
      $DOCKER_IMAGE"
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  needs: ["docker-build"]

deploy-prod:
  stage: deploy
  image: alpine:3.18
  before_script:
    - apk add --no-cache openssh-client sshpass docker-cli
  script:
    - sshpass -p "$PROD_SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $PROD_SSH_USER@$PROD_SSH_HOST "
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
      docker pull $DOCKER_IMAGE &&
      docker stop spring-prod || true;
      docker rm spring-prod || true;
      docker run -d --name spring-prod \
      -p 6969:6969 \
      -e USERNAME_DB='$PROD_DB_USER' \
      -e PASSWORD_DB='$PROD_DB_PASSWORD' \
      -e JWT_SECRET_KEY='$PROD_JWT_SECRET' \
      -e URL_DB='jdbc:postgresql://prod-db:5432/prod_db' \
      -e JAVA_OPTS='-Xmx1024m -Dspring.profiles.active=prod' \
      $DOCKER_IMAGE"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
  needs: ["docker-build"]